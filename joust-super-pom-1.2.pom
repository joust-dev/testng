<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--
      Company-wide configuration of all the core Maven plugins required for basic build/install/deploy.

      This POM file should not contain project-specific settings.

      Generally the release version of this file will be copied to each individual project in order to solve the
      chicken-and-egg problem of: you want Maven to download a parent super pom from an S3 repo, but the super pom
      contains the S3 connection settings.

      DO NOT MODIFY THIS FILE EXCEPT IN THE "git@github.com:joust-dev/maven-super-pom.git" PROJECT!!!  MAKE YOUR
      CHANGES IN THAT PROJECT, BUILD, RELEASE, THEN COPY THE RELEASED FILE TO YOUR LOCAL PROJECT:

      $ aws s3 cp s3://ops.joust.com/maven-repo/release/com/joust/maven/joust-super-pom/$VER/joust-super-pom-$VER.pom .
      -->

    <groupId>com.joust.maven</groupId>
    <artifactId>joust-super-pom</artifactId>
    <version>1.2</version>
    <packaging>pom</packaging>

    <name>Joust Maven Super POM</name>

    <scm>
        <connection>scm:git:git@github.com:joust-dev/maven-super-pom.git</connection>
        <tag>joust-super-pom-1.2</tag>
    </scm>

    <properties>
        <!-- Child projects may override these settings. -->
        <java.minimum.version>1.7</java.minimum.version>

        <!-- Maven build settings. -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <build>
        <!-- keep plugins in alphabetical order -->
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>${java.minimum.version}</source>
                    <target>${java.minimum.version}</target>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <!-- Enforce minimum Maven and Java versions. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.3.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.0</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>${java.minimum.version}</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Always generate source jars. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.2.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <pluginManagement>
            <!-- keep plugins in alphabetical order -->
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>2.5</version>
                </plugin>
                <!-- Make sure we always turn all warnings on during compilation. -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>2.3.2</version>
                    <configuration>
                        <compilerArgument>-Xlint:all</compilerArgument>
                        <showWarnings>true</showWarnings>
                        <showDeprecation>true</showDeprecation>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.8</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.15</version>
                    <configuration>
                        <argLine>-Dfile.encoding=UTF-8 -Djava.awt.headless=true</argLine>
                        <includes>
                            <!-- Execute only integration tests (see also maven-surefire-plugin configuration below). -->
                            <include>test/integration/**</include>
                        </includes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.4</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.9.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.4.2</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.scm</groupId>
                            <artifactId>maven-scm-provider-gitexe</artifactId>
                            <version>1.9</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.6</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>2.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.15</version>
                    <configuration>
                        <argLine>-Dfile.encoding=UTF-8 -Djava.awt.headless=true</argLine>
                        <excludes>
                            <!-- Execute only unit tests (see also maven-surefire-plugin configuration below). -->
                            <exclude>test/integration/**</exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>1.2.1</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <!-- keep extensions in alphabetical order -->
        <extensions>
            <extension>
                <groupId>org.kuali.maven.wagons</groupId>
                <artifactId>maven-s3-wagon</artifactId>
                <version>1.2.1</version>
            </extension>
        </extensions>
    </build>

    <!-- S3 Maven repository.  Specify Access ID and Secret Key in ~/.m2/settings.xml or use IAM roles. -->
    <distributionManagement>
        <repository>
            <id>joust-release</id>
            <url>s3://ops.joust.com/maven-repo/release</url>
        </repository>
        <snapshotRepository>
            <id>joust-snapshot</id>
            <url>s3://ops.joust.com/maven-repo/snapshot</url>
        </snapshotRepository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>joust-release</id>
            <url>s3://ops.joust.com/maven-repo/release</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>joust-snapshot</id>
            <url>s3://ops.joust.com/maven-repo/snapshot</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>joust-release</id>
            <url>s3://ops.joust.com/maven-repo/release</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>joust-snapshot</id>
            <url>s3://ops.joust.com/maven-repo/snapshot</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
</project>
